#Problem02 All combinations of size r from an array

You are given an array arr[] consisting of n elements. Your task is to generate and print all possible combinations of exactly r elements from this array.
Note: A combination is a selection of items where the order does not matter. Ensure that each unique group of r elements is printed only once, regardless of order.

Example:

Input: arr = [1, 2, 3, 4], r = 2
Output: 1 2
               1 3
               1 4
               2 3
               2 4
               3 4
Explanation: We need to generate all possible combinations of size 2 from an array of size 4. The total number of such combinations is given by the formula:
4C2 = 4! / [(4 - 2)! × 2!] = 6 combinations.

Input: arr = [1, 2, 3, 4], r = 3
Output: 1 2 3
               1 2 4
               1 3 4
               2 3 4
Explanation: We need to generate all possible combinations of size 3 from an array of size 4. The total number of such combinations is given by the formula:
4C3 = 4! / [(4 - 3)! × 3!] = 4 combinations.

#Approach I used:

Using Recursion and Fixing The Elements - O(nCr * r) Time and O(r) Space
The idea is to fix one element at a time at the current index and recursively fill the remaining positions. Starting from the first index, we try all possible elements that can be placed at that position such that the remaining elements can still fill the combination of size r. Once the size of the current combination becomes equal to r, we store or print that combination. To avoid duplicates, we only consider elements for the remaining positions that are on the right side of the current element.

Follow the below given step-by-step approach:

1 Start with the first index (initially 0) and fix one element at this index.
2 Recursively try to fix the next element at the next index.
3 Continue this process until the size of the current combination becomes equal to r.
4 At each recursive call, iterate from the current start index to the end of the array while ensuring there are enough remaining elements to fill the combination.
5 When the current combination size becomes r, add it to the result list.
6 Use a temporary array to build each combination step by step.
7 Store the final combinations in a result list and return it.


